
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACONSEN CMOTIF COMMA COMP CONSEN COUNT CTABLE DCONSEN DOT DRAW DTYPE EQUALS FFORMAT ID INT LPAR PRINT PTYPE RCOMP READ RPAR RTRANSC RTYPE SEQ STRING STYPE TFORMAT TRANSC TRANSL TTYPE VARLIST VOID WRITEstatement : VARLIST statement : ID EQUALS ID\n                    | ID EQUALS result\n                    statement : ID\n                   statement : result\n                   result : method_one\n                | method_two\n                | method_three\n                method_one : PRINT LPAR ID RPAR\n                    | COMP LPAR ID RPAR\n                    | RCOMP LPAR ID RPAR\n                    | TRANSC LPAR ID RPAR\n                    | RTRANSC LPAR ID RPAR\n                    | CTABLE LPAR INT RPAR\n                    | COUNT LPAR ID RPAR\n                    | CONSEN LPAR ID RPAR\n                    | ACONSEN LPAR ID RPAR\n                    | DCONSEN LPAR ID RPAR\n                    | CMOTIF LPAR list RPAR\n                    | TRANSL LPAR ID RPAR\n                    | READ LPAR STRING RPAR\n                method_two : SEQ LPAR STRING COMMA DTYPE RPAR\n                    | SEQ LPAR STRING COMMA RTYPE RPAR\n                    method_three : DRAW LPAR INT COMMA ID COMMA STRING RPAR\n                    | WRITE LPAR FFORMAT COMMA ID COMMA STRING RPAR\n                    | WRITE LPAR TFORMAT COMMA ID COMMA STRING RPAR\n                    list : list COMMA list\n            | ID\n            '
    
_lr_action_items = {'VARLIST':([0,],[2,]),'ID':([0,24,25,26,27,28,29,31,32,33,34,35,36,72,76,77,78,],[3,41,43,44,45,46,47,49,50,51,52,54,55,54,82,83,84,]),'PRINT':([0,24,],[8,8,]),'COMP':([0,24,],[9,9,]),'RCOMP':([0,24,],[10,10,]),'TRANSC':([0,24,],[11,11,]),'RTRANSC':([0,24,],[12,12,]),'CTABLE':([0,24,],[13,13,]),'COUNT':([0,24,],[14,14,]),'CONSEN':([0,24,],[15,15,]),'ACONSEN':([0,24,],[16,16,]),'DCONSEN':([0,24,],[17,17,]),'CMOTIF':([0,24,],[18,18,]),'TRANSL':([0,24,],[19,19,]),'READ':([0,24,],[20,20,]),'SEQ':([0,24,],[21,21,]),'DRAW':([0,24,],[22,22,]),'WRITE':([0,24,],[23,23,]),'$end':([1,2,3,4,5,6,7,41,42,61,62,63,64,65,66,67,68,69,70,71,73,74,85,86,93,94,95,],[0,-1,-4,-5,-6,-7,-8,-2,-3,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,]),'EQUALS':([3,],[24,]),'LPAR':([8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,],[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,]),'INT':([30,39,],[48,58,]),'STRING':([37,38,87,88,89,],[56,57,90,91,92,]),'FFORMAT':([40,],[59,]),'TFORMAT':([40,],[60,]),'RPAR':([43,44,45,46,47,48,49,50,51,52,53,54,55,56,79,80,81,90,91,92,],[61,62,63,64,65,66,67,68,69,70,71,-28,73,74,-27,85,86,93,94,95,]),'COMMA':([53,54,57,58,59,60,79,82,83,84,],[72,-28,75,76,77,78,72,87,88,89,]),'DTYPE':([75,],[80,]),'RTYPE':([75,],[81,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'result':([0,24,],[4,42,]),'method_one':([0,24,],[5,5,]),'method_two':([0,24,],[6,6,]),'method_three':([0,24,],[7,7,]),'list':([35,72,],[53,79,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> VARLIST','statement',1,'p_print_varlist','biolpp_parser.py',16),
  ('statement -> ID EQUALS ID','statement',3,'p_assignment','biolpp_parser.py',24),
  ('statement -> ID EQUALS result','statement',3,'p_assignment','biolpp_parser.py',25),
  ('statement -> ID','statement',1,'p_statement_id','biolpp_parser.py',33),
  ('statement -> result','statement',1,'p_statement_result','biolpp_parser.py',41),
  ('result -> method_one','result',1,'p_result','biolpp_parser.py',49),
  ('result -> method_two','result',1,'p_result','biolpp_parser.py',50),
  ('result -> method_three','result',1,'p_result','biolpp_parser.py',51),
  ('method_one -> PRINT LPAR ID RPAR','method_one',4,'p_method_one','biolpp_parser.py',62),
  ('method_one -> COMP LPAR ID RPAR','method_one',4,'p_method_one','biolpp_parser.py',63),
  ('method_one -> RCOMP LPAR ID RPAR','method_one',4,'p_method_one','biolpp_parser.py',64),
  ('method_one -> TRANSC LPAR ID RPAR','method_one',4,'p_method_one','biolpp_parser.py',65),
  ('method_one -> RTRANSC LPAR ID RPAR','method_one',4,'p_method_one','biolpp_parser.py',66),
  ('method_one -> CTABLE LPAR INT RPAR','method_one',4,'p_method_one','biolpp_parser.py',67),
  ('method_one -> COUNT LPAR ID RPAR','method_one',4,'p_method_one','biolpp_parser.py',68),
  ('method_one -> CONSEN LPAR ID RPAR','method_one',4,'p_method_one','biolpp_parser.py',69),
  ('method_one -> ACONSEN LPAR ID RPAR','method_one',4,'p_method_one','biolpp_parser.py',70),
  ('method_one -> DCONSEN LPAR ID RPAR','method_one',4,'p_method_one','biolpp_parser.py',71),
  ('method_one -> CMOTIF LPAR list RPAR','method_one',4,'p_method_one','biolpp_parser.py',72),
  ('method_one -> TRANSL LPAR ID RPAR','method_one',4,'p_method_one','biolpp_parser.py',73),
  ('method_one -> READ LPAR STRING RPAR','method_one',4,'p_method_one','biolpp_parser.py',74),
  ('method_two -> SEQ LPAR STRING COMMA DTYPE RPAR','method_two',6,'p_method_two','biolpp_parser.py',108),
  ('method_two -> SEQ LPAR STRING COMMA RTYPE RPAR','method_two',6,'p_method_two','biolpp_parser.py',109),
  ('method_three -> DRAW LPAR INT COMMA ID COMMA STRING RPAR','method_three',8,'p_method_three','biolpp_parser.py',116),
  ('method_three -> WRITE LPAR FFORMAT COMMA ID COMMA STRING RPAR','method_three',8,'p_method_three','biolpp_parser.py',117),
  ('method_three -> WRITE LPAR TFORMAT COMMA ID COMMA STRING RPAR','method_three',8,'p_method_three','biolpp_parser.py',118),
  ('list -> list COMMA list','list',3,'p_list','biolpp_parser.py',122),
  ('list -> ID','list',1,'p_list','biolpp_parser.py',123),
]
