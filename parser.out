Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> VARLIST
Rule 2     statement -> ID EQUALS ID
Rule 3     statement -> ID EQUALS result
Rule 4     statement -> ID
Rule 5     statement -> result
Rule 6     result -> method_one
Rule 7     result -> method_two
Rule 8     result -> method_three
Rule 9     method_one -> PRINT LPAR ID RPAR
Rule 10    method_one -> COMP LPAR ID RPAR
Rule 11    method_one -> RCOMP LPAR ID RPAR
Rule 12    method_one -> TRANSC LPAR ID RPAR
Rule 13    method_one -> RTRANSC LPAR ID RPAR
Rule 14    method_one -> CTABLE LPAR INT RPAR
Rule 15    method_one -> COUNT LPAR ID RPAR
Rule 16    method_one -> CONSEN LPAR ID RPAR
Rule 17    method_one -> ACONSEN LPAR ID RPAR
Rule 18    method_one -> DCONSEN LPAR ID RPAR
Rule 19    method_one -> TRANSL LPAR ID RPAR
Rule 20    method_one -> READ LPAR STRING RPAR
Rule 21    method_one -> WRITE LPAR ID RPAR
Rule 22    method_one -> GCCON LPAR STRING RPAR
Rule 23    method_two -> SEQ LPAR STRING COMMA DTYPE RPAR
Rule 24    method_two -> SEQ LPAR STRING COMMA RTYPE RPAR
Rule 25    method_two -> HAMDIS LPAR ID COMMA ID RPAR
Rule 26    method_two -> RECUR LPAR INT COMMA INT RPAR
Rule 27    method_three -> DRAW LPAR INT COMMA STRING RPAR

Terminals, with rules where they appear

ACONSEN              : 17
COMMA                : 23 24 25 26 27
COMP                 : 10
CONSEN               : 16
COUNT                : 15
CTABLE               : 14
DCONSEN              : 18
DRAW                 : 27
DTYPE                : 23
EQUALS               : 2 3
GCCON                : 22
HAMDIS               : 25
ID                   : 2 2 3 4 9 10 11 12 13 15 16 17 18 19 21 25 25
INT                  : 14 26 26 27
LPAR                 : 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
PRINT                : 9
RCOMP                : 11
READ                 : 20
RECUR                : 26
RPAR                 : 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
RTRANSC              : 13
RTYPE                : 24
SEQ                  : 23 24
STRING               : 20 22 23 24 27
TRANSC               : 12
TRANSL               : 19
VARLIST              : 1
WRITE                : 21
error                : 

Nonterminals, with rules where they appear

method_one           : 6
method_three         : 8
method_two           : 7
result               : 3 5
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . VARLIST
    (2) statement -> . ID EQUALS ID
    (3) statement -> . ID EQUALS result
    (4) statement -> . ID
    (5) statement -> . result
    (6) result -> . method_one
    (7) result -> . method_two
    (8) result -> . method_three
    (9) method_one -> . PRINT LPAR ID RPAR
    (10) method_one -> . COMP LPAR ID RPAR
    (11) method_one -> . RCOMP LPAR ID RPAR
    (12) method_one -> . TRANSC LPAR ID RPAR
    (13) method_one -> . RTRANSC LPAR ID RPAR
    (14) method_one -> . CTABLE LPAR INT RPAR
    (15) method_one -> . COUNT LPAR ID RPAR
    (16) method_one -> . CONSEN LPAR ID RPAR
    (17) method_one -> . ACONSEN LPAR ID RPAR
    (18) method_one -> . DCONSEN LPAR ID RPAR
    (19) method_one -> . TRANSL LPAR ID RPAR
    (20) method_one -> . READ LPAR STRING RPAR
    (21) method_one -> . WRITE LPAR ID RPAR
    (22) method_one -> . GCCON LPAR STRING RPAR
    (23) method_two -> . SEQ LPAR STRING COMMA DTYPE RPAR
    (24) method_two -> . SEQ LPAR STRING COMMA RTYPE RPAR
    (25) method_two -> . HAMDIS LPAR ID COMMA ID RPAR
    (26) method_two -> . RECUR LPAR INT COMMA INT RPAR
    (27) method_three -> . DRAW LPAR INT COMMA STRING RPAR

    VARLIST         shift and go to state 2
    ID              shift and go to state 3
    PRINT           shift and go to state 8
    COMP            shift and go to state 9
    RCOMP           shift and go to state 10
    TRANSC          shift and go to state 11
    RTRANSC         shift and go to state 12
    CTABLE          shift and go to state 13
    COUNT           shift and go to state 14
    CONSEN          shift and go to state 15
    ACONSEN         shift and go to state 16
    DCONSEN         shift and go to state 17
    TRANSL          shift and go to state 18
    READ            shift and go to state 19
    WRITE           shift and go to state 20
    GCCON           shift and go to state 21
    SEQ             shift and go to state 22
    HAMDIS          shift and go to state 23
    RECUR           shift and go to state 24
    DRAW            shift and go to state 25

    statement                      shift and go to state 1
    result                         shift and go to state 4
    method_one                     shift and go to state 5
    method_two                     shift and go to state 6
    method_three                   shift and go to state 7

state 1

    (0) S' -> statement .



state 2

    (1) statement -> VARLIST .

    $end            reduce using rule 1 (statement -> VARLIST .)


state 3

    (2) statement -> ID . EQUALS ID
    (3) statement -> ID . EQUALS result
    (4) statement -> ID .

    EQUALS          shift and go to state 26
    $end            reduce using rule 4 (statement -> ID .)


state 4

    (5) statement -> result .

    $end            reduce using rule 5 (statement -> result .)


state 5

    (6) result -> method_one .

    $end            reduce using rule 6 (result -> method_one .)


state 6

    (7) result -> method_two .

    $end            reduce using rule 7 (result -> method_two .)


state 7

    (8) result -> method_three .

    $end            reduce using rule 8 (result -> method_three .)


state 8

    (9) method_one -> PRINT . LPAR ID RPAR

    LPAR            shift and go to state 27


state 9

    (10) method_one -> COMP . LPAR ID RPAR

    LPAR            shift and go to state 28


state 10

    (11) method_one -> RCOMP . LPAR ID RPAR

    LPAR            shift and go to state 29


state 11

    (12) method_one -> TRANSC . LPAR ID RPAR

    LPAR            shift and go to state 30


state 12

    (13) method_one -> RTRANSC . LPAR ID RPAR

    LPAR            shift and go to state 31


state 13

    (14) method_one -> CTABLE . LPAR INT RPAR

    LPAR            shift and go to state 32


state 14

    (15) method_one -> COUNT . LPAR ID RPAR

    LPAR            shift and go to state 33


state 15

    (16) method_one -> CONSEN . LPAR ID RPAR

    LPAR            shift and go to state 34


state 16

    (17) method_one -> ACONSEN . LPAR ID RPAR

    LPAR            shift and go to state 35


state 17

    (18) method_one -> DCONSEN . LPAR ID RPAR

    LPAR            shift and go to state 36


state 18

    (19) method_one -> TRANSL . LPAR ID RPAR

    LPAR            shift and go to state 37


state 19

    (20) method_one -> READ . LPAR STRING RPAR

    LPAR            shift and go to state 38


state 20

    (21) method_one -> WRITE . LPAR ID RPAR

    LPAR            shift and go to state 39


state 21

    (22) method_one -> GCCON . LPAR STRING RPAR

    LPAR            shift and go to state 40


state 22

    (23) method_two -> SEQ . LPAR STRING COMMA DTYPE RPAR
    (24) method_two -> SEQ . LPAR STRING COMMA RTYPE RPAR

    LPAR            shift and go to state 41


state 23

    (25) method_two -> HAMDIS . LPAR ID COMMA ID RPAR

    LPAR            shift and go to state 42


state 24

    (26) method_two -> RECUR . LPAR INT COMMA INT RPAR

    LPAR            shift and go to state 43


state 25

    (27) method_three -> DRAW . LPAR INT COMMA STRING RPAR

    LPAR            shift and go to state 44


state 26

    (2) statement -> ID EQUALS . ID
    (3) statement -> ID EQUALS . result
    (6) result -> . method_one
    (7) result -> . method_two
    (8) result -> . method_three
    (9) method_one -> . PRINT LPAR ID RPAR
    (10) method_one -> . COMP LPAR ID RPAR
    (11) method_one -> . RCOMP LPAR ID RPAR
    (12) method_one -> . TRANSC LPAR ID RPAR
    (13) method_one -> . RTRANSC LPAR ID RPAR
    (14) method_one -> . CTABLE LPAR INT RPAR
    (15) method_one -> . COUNT LPAR ID RPAR
    (16) method_one -> . CONSEN LPAR ID RPAR
    (17) method_one -> . ACONSEN LPAR ID RPAR
    (18) method_one -> . DCONSEN LPAR ID RPAR
    (19) method_one -> . TRANSL LPAR ID RPAR
    (20) method_one -> . READ LPAR STRING RPAR
    (21) method_one -> . WRITE LPAR ID RPAR
    (22) method_one -> . GCCON LPAR STRING RPAR
    (23) method_two -> . SEQ LPAR STRING COMMA DTYPE RPAR
    (24) method_two -> . SEQ LPAR STRING COMMA RTYPE RPAR
    (25) method_two -> . HAMDIS LPAR ID COMMA ID RPAR
    (26) method_two -> . RECUR LPAR INT COMMA INT RPAR
    (27) method_three -> . DRAW LPAR INT COMMA STRING RPAR

    ID              shift and go to state 45
    PRINT           shift and go to state 8
    COMP            shift and go to state 9
    RCOMP           shift and go to state 10
    TRANSC          shift and go to state 11
    RTRANSC         shift and go to state 12
    CTABLE          shift and go to state 13
    COUNT           shift and go to state 14
    CONSEN          shift and go to state 15
    ACONSEN         shift and go to state 16
    DCONSEN         shift and go to state 17
    TRANSL          shift and go to state 18
    READ            shift and go to state 19
    WRITE           shift and go to state 20
    GCCON           shift and go to state 21
    SEQ             shift and go to state 22
    HAMDIS          shift and go to state 23
    RECUR           shift and go to state 24
    DRAW            shift and go to state 25

    result                         shift and go to state 46
    method_one                     shift and go to state 5
    method_two                     shift and go to state 6
    method_three                   shift and go to state 7

state 27

    (9) method_one -> PRINT LPAR . ID RPAR

    ID              shift and go to state 47


state 28

    (10) method_one -> COMP LPAR . ID RPAR

    ID              shift and go to state 48


state 29

    (11) method_one -> RCOMP LPAR . ID RPAR

    ID              shift and go to state 49


state 30

    (12) method_one -> TRANSC LPAR . ID RPAR

    ID              shift and go to state 50


state 31

    (13) method_one -> RTRANSC LPAR . ID RPAR

    ID              shift and go to state 51


state 32

    (14) method_one -> CTABLE LPAR . INT RPAR

    INT             shift and go to state 52


state 33

    (15) method_one -> COUNT LPAR . ID RPAR

    ID              shift and go to state 53


state 34

    (16) method_one -> CONSEN LPAR . ID RPAR

    ID              shift and go to state 54


state 35

    (17) method_one -> ACONSEN LPAR . ID RPAR

    ID              shift and go to state 55


state 36

    (18) method_one -> DCONSEN LPAR . ID RPAR

    ID              shift and go to state 56


state 37

    (19) method_one -> TRANSL LPAR . ID RPAR

    ID              shift and go to state 57


state 38

    (20) method_one -> READ LPAR . STRING RPAR

    STRING          shift and go to state 58


state 39

    (21) method_one -> WRITE LPAR . ID RPAR

    ID              shift and go to state 59


state 40

    (22) method_one -> GCCON LPAR . STRING RPAR

    STRING          shift and go to state 60


state 41

    (23) method_two -> SEQ LPAR . STRING COMMA DTYPE RPAR
    (24) method_two -> SEQ LPAR . STRING COMMA RTYPE RPAR

    STRING          shift and go to state 61


state 42

    (25) method_two -> HAMDIS LPAR . ID COMMA ID RPAR

    ID              shift and go to state 62


state 43

    (26) method_two -> RECUR LPAR . INT COMMA INT RPAR

    INT             shift and go to state 63


state 44

    (27) method_three -> DRAW LPAR . INT COMMA STRING RPAR

    INT             shift and go to state 64


state 45

    (2) statement -> ID EQUALS ID .

    $end            reduce using rule 2 (statement -> ID EQUALS ID .)


state 46

    (3) statement -> ID EQUALS result .

    $end            reduce using rule 3 (statement -> ID EQUALS result .)


state 47

    (9) method_one -> PRINT LPAR ID . RPAR

    RPAR            shift and go to state 65


state 48

    (10) method_one -> COMP LPAR ID . RPAR

    RPAR            shift and go to state 66


state 49

    (11) method_one -> RCOMP LPAR ID . RPAR

    RPAR            shift and go to state 67


state 50

    (12) method_one -> TRANSC LPAR ID . RPAR

    RPAR            shift and go to state 68


state 51

    (13) method_one -> RTRANSC LPAR ID . RPAR

    RPAR            shift and go to state 69


state 52

    (14) method_one -> CTABLE LPAR INT . RPAR

    RPAR            shift and go to state 70


state 53

    (15) method_one -> COUNT LPAR ID . RPAR

    RPAR            shift and go to state 71


state 54

    (16) method_one -> CONSEN LPAR ID . RPAR

    RPAR            shift and go to state 72


state 55

    (17) method_one -> ACONSEN LPAR ID . RPAR

    RPAR            shift and go to state 73


state 56

    (18) method_one -> DCONSEN LPAR ID . RPAR

    RPAR            shift and go to state 74


state 57

    (19) method_one -> TRANSL LPAR ID . RPAR

    RPAR            shift and go to state 75


state 58

    (20) method_one -> READ LPAR STRING . RPAR

    RPAR            shift and go to state 76


state 59

    (21) method_one -> WRITE LPAR ID . RPAR

    RPAR            shift and go to state 77


state 60

    (22) method_one -> GCCON LPAR STRING . RPAR

    RPAR            shift and go to state 78


state 61

    (23) method_two -> SEQ LPAR STRING . COMMA DTYPE RPAR
    (24) method_two -> SEQ LPAR STRING . COMMA RTYPE RPAR

    COMMA           shift and go to state 79


state 62

    (25) method_two -> HAMDIS LPAR ID . COMMA ID RPAR

    COMMA           shift and go to state 80


state 63

    (26) method_two -> RECUR LPAR INT . COMMA INT RPAR

    COMMA           shift and go to state 81


state 64

    (27) method_three -> DRAW LPAR INT . COMMA STRING RPAR

    COMMA           shift and go to state 82


state 65

    (9) method_one -> PRINT LPAR ID RPAR .

    $end            reduce using rule 9 (method_one -> PRINT LPAR ID RPAR .)


state 66

    (10) method_one -> COMP LPAR ID RPAR .

    $end            reduce using rule 10 (method_one -> COMP LPAR ID RPAR .)


state 67

    (11) method_one -> RCOMP LPAR ID RPAR .

    $end            reduce using rule 11 (method_one -> RCOMP LPAR ID RPAR .)


state 68

    (12) method_one -> TRANSC LPAR ID RPAR .

    $end            reduce using rule 12 (method_one -> TRANSC LPAR ID RPAR .)


state 69

    (13) method_one -> RTRANSC LPAR ID RPAR .

    $end            reduce using rule 13 (method_one -> RTRANSC LPAR ID RPAR .)


state 70

    (14) method_one -> CTABLE LPAR INT RPAR .

    $end            reduce using rule 14 (method_one -> CTABLE LPAR INT RPAR .)


state 71

    (15) method_one -> COUNT LPAR ID RPAR .

    $end            reduce using rule 15 (method_one -> COUNT LPAR ID RPAR .)


state 72

    (16) method_one -> CONSEN LPAR ID RPAR .

    $end            reduce using rule 16 (method_one -> CONSEN LPAR ID RPAR .)


state 73

    (17) method_one -> ACONSEN LPAR ID RPAR .

    $end            reduce using rule 17 (method_one -> ACONSEN LPAR ID RPAR .)


state 74

    (18) method_one -> DCONSEN LPAR ID RPAR .

    $end            reduce using rule 18 (method_one -> DCONSEN LPAR ID RPAR .)


state 75

    (19) method_one -> TRANSL LPAR ID RPAR .

    $end            reduce using rule 19 (method_one -> TRANSL LPAR ID RPAR .)


state 76

    (20) method_one -> READ LPAR STRING RPAR .

    $end            reduce using rule 20 (method_one -> READ LPAR STRING RPAR .)


state 77

    (21) method_one -> WRITE LPAR ID RPAR .

    $end            reduce using rule 21 (method_one -> WRITE LPAR ID RPAR .)


state 78

    (22) method_one -> GCCON LPAR STRING RPAR .

    $end            reduce using rule 22 (method_one -> GCCON LPAR STRING RPAR .)


state 79

    (23) method_two -> SEQ LPAR STRING COMMA . DTYPE RPAR
    (24) method_two -> SEQ LPAR STRING COMMA . RTYPE RPAR

    DTYPE           shift and go to state 83
    RTYPE           shift and go to state 84


state 80

    (25) method_two -> HAMDIS LPAR ID COMMA . ID RPAR

    ID              shift and go to state 85


state 81

    (26) method_two -> RECUR LPAR INT COMMA . INT RPAR

    INT             shift and go to state 86


state 82

    (27) method_three -> DRAW LPAR INT COMMA . STRING RPAR

    STRING          shift and go to state 87


state 83

    (23) method_two -> SEQ LPAR STRING COMMA DTYPE . RPAR

    RPAR            shift and go to state 88


state 84

    (24) method_two -> SEQ LPAR STRING COMMA RTYPE . RPAR

    RPAR            shift and go to state 89


state 85

    (25) method_two -> HAMDIS LPAR ID COMMA ID . RPAR

    RPAR            shift and go to state 90


state 86

    (26) method_two -> RECUR LPAR INT COMMA INT . RPAR

    RPAR            shift and go to state 91


state 87

    (27) method_three -> DRAW LPAR INT COMMA STRING . RPAR

    RPAR            shift and go to state 92


state 88

    (23) method_two -> SEQ LPAR STRING COMMA DTYPE RPAR .

    $end            reduce using rule 23 (method_two -> SEQ LPAR STRING COMMA DTYPE RPAR .)


state 89

    (24) method_two -> SEQ LPAR STRING COMMA RTYPE RPAR .

    $end            reduce using rule 24 (method_two -> SEQ LPAR STRING COMMA RTYPE RPAR .)


state 90

    (25) method_two -> HAMDIS LPAR ID COMMA ID RPAR .

    $end            reduce using rule 25 (method_two -> HAMDIS LPAR ID COMMA ID RPAR .)


state 91

    (26) method_two -> RECUR LPAR INT COMMA INT RPAR .

    $end            reduce using rule 26 (method_two -> RECUR LPAR INT COMMA INT RPAR .)


state 92

    (27) method_three -> DRAW LPAR INT COMMA STRING RPAR .

    $end            reduce using rule 27 (method_three -> DRAW LPAR INT COMMA STRING RPAR .)

