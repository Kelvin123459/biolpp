Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> VARLIST
Rule 2     statement -> ID EQUALS ID
Rule 3     statement -> ID EQUALS result
Rule 4     statement -> ID
Rule 5     statement -> result
Rule 6     result -> method_one
Rule 7     result -> method_two
Rule 8     result -> method_three
Rule 9     method_one -> PRINT LPAR ID RPAR
Rule 10    method_one -> COMP LPAR ID RPAR
Rule 11    method_one -> RCOMP LPAR ID RPAR
Rule 12    method_one -> TRANSC LPAR ID RPAR
Rule 13    method_one -> RTRANSC LPAR ID RPAR
Rule 14    method_one -> CTABLE LPAR INT RPAR
Rule 15    method_one -> COUNT LPAR ID RPAR
Rule 16    method_one -> CONSEN LPAR ID RPAR
Rule 17    method_one -> ACONSEN LPAR ID RPAR
Rule 18    method_one -> DCONSEN LPAR ID RPAR
Rule 19    method_one -> TRANSL LPAR ID RPAR
Rule 20    method_one -> READ LPAR STRING COMMA STRING RPAR
Rule 21    method_one -> WRITE LPAR ID RPAR
Rule 22    method_one -> GCCON LPAR STRING RPAR
Rule 23    method_one -> RNAINF LPAR ID RPAR
Rule 24    method_one -> ORF LPAR STRING RPAR
Rule 25    method_one -> COMPF LPAR ID RPAR
Rule 26    method_one -> RCOMPF LPAR ID RPAR
Rule 27    method_one -> TRANSCF LPAR ID RPAR
Rule 28    method_one -> RTRANSCF LPAR ID RPAR
Rule 29    method_one -> MOTIF LPAR ID COMMA STRING RPAR
Rule 30    method_one -> PUNNETT LPAR STRING COMMA STRING RPAR
Rule 31    method_one -> WPUNNETT LPAR STRING COMMA STRING COMMA STRING RPAR
Rule 32    method_one -> PROTINFER LPAR STRING RPAR
Rule 33    method_two -> SEQ LPAR STRING COMMA DTYPE RPAR
Rule 34    method_two -> SEQ LPAR STRING COMMA RTYPE RPAR
Rule 35    method_two -> HAMDIS LPAR ID COMMA ID RPAR
Rule 36    method_two -> RECUR LPAR INT COMMA INT RPAR
Rule 37    method_three -> DRAW LPAR INT COMMA STRING RPAR

Terminals, with rules where they appear

ACONSEN              : 17
COMMA                : 20 29 30 31 31 33 34 35 36 37
COMP                 : 10
COMPF                : 25
CONSEN               : 16
COUNT                : 15
CTABLE               : 14
DCONSEN              : 18
DRAW                 : 37
DTYPE                : 33
EQUALS               : 2 3
GCCON                : 22
HAMDIS               : 35
ID                   : 2 2 3 4 9 10 11 12 13 15 16 17 18 19 21 23 25 26 27 28 29 35 35
INT                  : 14 36 36 37
LPAR                 : 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
MOTIF                : 29
ORF                  : 24
PRINT                : 9
PROTINFER            : 32
PUNNETT              : 30
RCOMP                : 11
RCOMPF               : 26
READ                 : 20
RECUR                : 36
RNAINF               : 23
RPAR                 : 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
RTRANSC              : 13
RTRANSCF             : 28
RTYPE                : 34
SEQ                  : 33 34
STRING               : 20 20 22 24 29 30 30 31 31 31 32 33 34 37
TRANSC               : 12
TRANSCF              : 27
TRANSL               : 19
VARLIST              : 1
WPUNNETT             : 31
WRITE                : 21
error                : 

Nonterminals, with rules where they appear

method_one           : 6
method_three         : 8
method_two           : 7
result               : 3 5
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . VARLIST
    (2) statement -> . ID EQUALS ID
    (3) statement -> . ID EQUALS result
    (4) statement -> . ID
    (5) statement -> . result
    (6) result -> . method_one
    (7) result -> . method_two
    (8) result -> . method_three
    (9) method_one -> . PRINT LPAR ID RPAR
    (10) method_one -> . COMP LPAR ID RPAR
    (11) method_one -> . RCOMP LPAR ID RPAR
    (12) method_one -> . TRANSC LPAR ID RPAR
    (13) method_one -> . RTRANSC LPAR ID RPAR
    (14) method_one -> . CTABLE LPAR INT RPAR
    (15) method_one -> . COUNT LPAR ID RPAR
    (16) method_one -> . CONSEN LPAR ID RPAR
    (17) method_one -> . ACONSEN LPAR ID RPAR
    (18) method_one -> . DCONSEN LPAR ID RPAR
    (19) method_one -> . TRANSL LPAR ID RPAR
    (20) method_one -> . READ LPAR STRING COMMA STRING RPAR
    (21) method_one -> . WRITE LPAR ID RPAR
    (22) method_one -> . GCCON LPAR STRING RPAR
    (23) method_one -> . RNAINF LPAR ID RPAR
    (24) method_one -> . ORF LPAR STRING RPAR
    (25) method_one -> . COMPF LPAR ID RPAR
    (26) method_one -> . RCOMPF LPAR ID RPAR
    (27) method_one -> . TRANSCF LPAR ID RPAR
    (28) method_one -> . RTRANSCF LPAR ID RPAR
    (29) method_one -> . MOTIF LPAR ID COMMA STRING RPAR
    (30) method_one -> . PUNNETT LPAR STRING COMMA STRING RPAR
    (31) method_one -> . WPUNNETT LPAR STRING COMMA STRING COMMA STRING RPAR
    (32) method_one -> . PROTINFER LPAR STRING RPAR
    (33) method_two -> . SEQ LPAR STRING COMMA DTYPE RPAR
    (34) method_two -> . SEQ LPAR STRING COMMA RTYPE RPAR
    (35) method_two -> . HAMDIS LPAR ID COMMA ID RPAR
    (36) method_two -> . RECUR LPAR INT COMMA INT RPAR
    (37) method_three -> . DRAW LPAR INT COMMA STRING RPAR

    VARLIST         shift and go to state 2
    ID              shift and go to state 3
    PRINT           shift and go to state 8
    COMP            shift and go to state 9
    RCOMP           shift and go to state 10
    TRANSC          shift and go to state 11
    RTRANSC         shift and go to state 12
    CTABLE          shift and go to state 13
    COUNT           shift and go to state 14
    CONSEN          shift and go to state 15
    ACONSEN         shift and go to state 16
    DCONSEN         shift and go to state 17
    TRANSL          shift and go to state 18
    READ            shift and go to state 19
    WRITE           shift and go to state 20
    GCCON           shift and go to state 21
    RNAINF          shift and go to state 22
    ORF             shift and go to state 23
    COMPF           shift and go to state 24
    RCOMPF          shift and go to state 25
    TRANSCF         shift and go to state 26
    RTRANSCF        shift and go to state 27
    MOTIF           shift and go to state 28
    PUNNETT         shift and go to state 29
    WPUNNETT        shift and go to state 30
    PROTINFER       shift and go to state 31
    SEQ             shift and go to state 32
    HAMDIS          shift and go to state 33
    RECUR           shift and go to state 34
    DRAW            shift and go to state 35

    statement                      shift and go to state 1
    result                         shift and go to state 4
    method_one                     shift and go to state 5
    method_two                     shift and go to state 6
    method_three                   shift and go to state 7

state 1

    (0) S' -> statement .



state 2

    (1) statement -> VARLIST .

    $end            reduce using rule 1 (statement -> VARLIST .)


state 3

    (2) statement -> ID . EQUALS ID
    (3) statement -> ID . EQUALS result
    (4) statement -> ID .

    EQUALS          shift and go to state 36
    $end            reduce using rule 4 (statement -> ID .)


state 4

    (5) statement -> result .

    $end            reduce using rule 5 (statement -> result .)


state 5

    (6) result -> method_one .

    $end            reduce using rule 6 (result -> method_one .)


state 6

    (7) result -> method_two .

    $end            reduce using rule 7 (result -> method_two .)


state 7

    (8) result -> method_three .

    $end            reduce using rule 8 (result -> method_three .)


state 8

    (9) method_one -> PRINT . LPAR ID RPAR

    LPAR            shift and go to state 37


state 9

    (10) method_one -> COMP . LPAR ID RPAR

    LPAR            shift and go to state 38


state 10

    (11) method_one -> RCOMP . LPAR ID RPAR

    LPAR            shift and go to state 39


state 11

    (12) method_one -> TRANSC . LPAR ID RPAR

    LPAR            shift and go to state 40


state 12

    (13) method_one -> RTRANSC . LPAR ID RPAR

    LPAR            shift and go to state 41


state 13

    (14) method_one -> CTABLE . LPAR INT RPAR

    LPAR            shift and go to state 42


state 14

    (15) method_one -> COUNT . LPAR ID RPAR

    LPAR            shift and go to state 43


state 15

    (16) method_one -> CONSEN . LPAR ID RPAR

    LPAR            shift and go to state 44


state 16

    (17) method_one -> ACONSEN . LPAR ID RPAR

    LPAR            shift and go to state 45


state 17

    (18) method_one -> DCONSEN . LPAR ID RPAR

    LPAR            shift and go to state 46


state 18

    (19) method_one -> TRANSL . LPAR ID RPAR

    LPAR            shift and go to state 47


state 19

    (20) method_one -> READ . LPAR STRING COMMA STRING RPAR

    LPAR            shift and go to state 48


state 20

    (21) method_one -> WRITE . LPAR ID RPAR

    LPAR            shift and go to state 49


state 21

    (22) method_one -> GCCON . LPAR STRING RPAR

    LPAR            shift and go to state 50


state 22

    (23) method_one -> RNAINF . LPAR ID RPAR

    LPAR            shift and go to state 51


state 23

    (24) method_one -> ORF . LPAR STRING RPAR

    LPAR            shift and go to state 52


state 24

    (25) method_one -> COMPF . LPAR ID RPAR

    LPAR            shift and go to state 53


state 25

    (26) method_one -> RCOMPF . LPAR ID RPAR

    LPAR            shift and go to state 54


state 26

    (27) method_one -> TRANSCF . LPAR ID RPAR

    LPAR            shift and go to state 55


state 27

    (28) method_one -> RTRANSCF . LPAR ID RPAR

    LPAR            shift and go to state 56


state 28

    (29) method_one -> MOTIF . LPAR ID COMMA STRING RPAR

    LPAR            shift and go to state 57


state 29

    (30) method_one -> PUNNETT . LPAR STRING COMMA STRING RPAR

    LPAR            shift and go to state 58


state 30

    (31) method_one -> WPUNNETT . LPAR STRING COMMA STRING COMMA STRING RPAR

    LPAR            shift and go to state 59


state 31

    (32) method_one -> PROTINFER . LPAR STRING RPAR

    LPAR            shift and go to state 60


state 32

    (33) method_two -> SEQ . LPAR STRING COMMA DTYPE RPAR
    (34) method_two -> SEQ . LPAR STRING COMMA RTYPE RPAR

    LPAR            shift and go to state 61


state 33

    (35) method_two -> HAMDIS . LPAR ID COMMA ID RPAR

    LPAR            shift and go to state 62


state 34

    (36) method_two -> RECUR . LPAR INT COMMA INT RPAR

    LPAR            shift and go to state 63


state 35

    (37) method_three -> DRAW . LPAR INT COMMA STRING RPAR

    LPAR            shift and go to state 64


state 36

    (2) statement -> ID EQUALS . ID
    (3) statement -> ID EQUALS . result
    (6) result -> . method_one
    (7) result -> . method_two
    (8) result -> . method_three
    (9) method_one -> . PRINT LPAR ID RPAR
    (10) method_one -> . COMP LPAR ID RPAR
    (11) method_one -> . RCOMP LPAR ID RPAR
    (12) method_one -> . TRANSC LPAR ID RPAR
    (13) method_one -> . RTRANSC LPAR ID RPAR
    (14) method_one -> . CTABLE LPAR INT RPAR
    (15) method_one -> . COUNT LPAR ID RPAR
    (16) method_one -> . CONSEN LPAR ID RPAR
    (17) method_one -> . ACONSEN LPAR ID RPAR
    (18) method_one -> . DCONSEN LPAR ID RPAR
    (19) method_one -> . TRANSL LPAR ID RPAR
    (20) method_one -> . READ LPAR STRING COMMA STRING RPAR
    (21) method_one -> . WRITE LPAR ID RPAR
    (22) method_one -> . GCCON LPAR STRING RPAR
    (23) method_one -> . RNAINF LPAR ID RPAR
    (24) method_one -> . ORF LPAR STRING RPAR
    (25) method_one -> . COMPF LPAR ID RPAR
    (26) method_one -> . RCOMPF LPAR ID RPAR
    (27) method_one -> . TRANSCF LPAR ID RPAR
    (28) method_one -> . RTRANSCF LPAR ID RPAR
    (29) method_one -> . MOTIF LPAR ID COMMA STRING RPAR
    (30) method_one -> . PUNNETT LPAR STRING COMMA STRING RPAR
    (31) method_one -> . WPUNNETT LPAR STRING COMMA STRING COMMA STRING RPAR
    (32) method_one -> . PROTINFER LPAR STRING RPAR
    (33) method_two -> . SEQ LPAR STRING COMMA DTYPE RPAR
    (34) method_two -> . SEQ LPAR STRING COMMA RTYPE RPAR
    (35) method_two -> . HAMDIS LPAR ID COMMA ID RPAR
    (36) method_two -> . RECUR LPAR INT COMMA INT RPAR
    (37) method_three -> . DRAW LPAR INT COMMA STRING RPAR

    ID              shift and go to state 65
    PRINT           shift and go to state 8
    COMP            shift and go to state 9
    RCOMP           shift and go to state 10
    TRANSC          shift and go to state 11
    RTRANSC         shift and go to state 12
    CTABLE          shift and go to state 13
    COUNT           shift and go to state 14
    CONSEN          shift and go to state 15
    ACONSEN         shift and go to state 16
    DCONSEN         shift and go to state 17
    TRANSL          shift and go to state 18
    READ            shift and go to state 19
    WRITE           shift and go to state 20
    GCCON           shift and go to state 21
    RNAINF          shift and go to state 22
    ORF             shift and go to state 23
    COMPF           shift and go to state 24
    RCOMPF          shift and go to state 25
    TRANSCF         shift and go to state 26
    RTRANSCF        shift and go to state 27
    MOTIF           shift and go to state 28
    PUNNETT         shift and go to state 29
    WPUNNETT        shift and go to state 30
    PROTINFER       shift and go to state 31
    SEQ             shift and go to state 32
    HAMDIS          shift and go to state 33
    RECUR           shift and go to state 34
    DRAW            shift and go to state 35

    result                         shift and go to state 66
    method_one                     shift and go to state 5
    method_two                     shift and go to state 6
    method_three                   shift and go to state 7

state 37

    (9) method_one -> PRINT LPAR . ID RPAR

    ID              shift and go to state 67


state 38

    (10) method_one -> COMP LPAR . ID RPAR

    ID              shift and go to state 68


state 39

    (11) method_one -> RCOMP LPAR . ID RPAR

    ID              shift and go to state 69


state 40

    (12) method_one -> TRANSC LPAR . ID RPAR

    ID              shift and go to state 70


state 41

    (13) method_one -> RTRANSC LPAR . ID RPAR

    ID              shift and go to state 71


state 42

    (14) method_one -> CTABLE LPAR . INT RPAR

    INT             shift and go to state 72


state 43

    (15) method_one -> COUNT LPAR . ID RPAR

    ID              shift and go to state 73


state 44

    (16) method_one -> CONSEN LPAR . ID RPAR

    ID              shift and go to state 74


state 45

    (17) method_one -> ACONSEN LPAR . ID RPAR

    ID              shift and go to state 75


state 46

    (18) method_one -> DCONSEN LPAR . ID RPAR

    ID              shift and go to state 76


state 47

    (19) method_one -> TRANSL LPAR . ID RPAR

    ID              shift and go to state 77


state 48

    (20) method_one -> READ LPAR . STRING COMMA STRING RPAR

    STRING          shift and go to state 78


state 49

    (21) method_one -> WRITE LPAR . ID RPAR

    ID              shift and go to state 79


state 50

    (22) method_one -> GCCON LPAR . STRING RPAR

    STRING          shift and go to state 80


state 51

    (23) method_one -> RNAINF LPAR . ID RPAR

    ID              shift and go to state 81


state 52

    (24) method_one -> ORF LPAR . STRING RPAR

    STRING          shift and go to state 82


state 53

    (25) method_one -> COMPF LPAR . ID RPAR

    ID              shift and go to state 83


state 54

    (26) method_one -> RCOMPF LPAR . ID RPAR

    ID              shift and go to state 84


state 55

    (27) method_one -> TRANSCF LPAR . ID RPAR

    ID              shift and go to state 85


state 56

    (28) method_one -> RTRANSCF LPAR . ID RPAR

    ID              shift and go to state 86


state 57

    (29) method_one -> MOTIF LPAR . ID COMMA STRING RPAR

    ID              shift and go to state 87


state 58

    (30) method_one -> PUNNETT LPAR . STRING COMMA STRING RPAR

    STRING          shift and go to state 88


state 59

    (31) method_one -> WPUNNETT LPAR . STRING COMMA STRING COMMA STRING RPAR

    STRING          shift and go to state 89


state 60

    (32) method_one -> PROTINFER LPAR . STRING RPAR

    STRING          shift and go to state 90


state 61

    (33) method_two -> SEQ LPAR . STRING COMMA DTYPE RPAR
    (34) method_two -> SEQ LPAR . STRING COMMA RTYPE RPAR

    STRING          shift and go to state 91


state 62

    (35) method_two -> HAMDIS LPAR . ID COMMA ID RPAR

    ID              shift and go to state 92


state 63

    (36) method_two -> RECUR LPAR . INT COMMA INT RPAR

    INT             shift and go to state 93


state 64

    (37) method_three -> DRAW LPAR . INT COMMA STRING RPAR

    INT             shift and go to state 94


state 65

    (2) statement -> ID EQUALS ID .

    $end            reduce using rule 2 (statement -> ID EQUALS ID .)


state 66

    (3) statement -> ID EQUALS result .

    $end            reduce using rule 3 (statement -> ID EQUALS result .)


state 67

    (9) method_one -> PRINT LPAR ID . RPAR

    RPAR            shift and go to state 95


state 68

    (10) method_one -> COMP LPAR ID . RPAR

    RPAR            shift and go to state 96


state 69

    (11) method_one -> RCOMP LPAR ID . RPAR

    RPAR            shift and go to state 97


state 70

    (12) method_one -> TRANSC LPAR ID . RPAR

    RPAR            shift and go to state 98


state 71

    (13) method_one -> RTRANSC LPAR ID . RPAR

    RPAR            shift and go to state 99


state 72

    (14) method_one -> CTABLE LPAR INT . RPAR

    RPAR            shift and go to state 100


state 73

    (15) method_one -> COUNT LPAR ID . RPAR

    RPAR            shift and go to state 101


state 74

    (16) method_one -> CONSEN LPAR ID . RPAR

    RPAR            shift and go to state 102


state 75

    (17) method_one -> ACONSEN LPAR ID . RPAR

    RPAR            shift and go to state 103


state 76

    (18) method_one -> DCONSEN LPAR ID . RPAR

    RPAR            shift and go to state 104


state 77

    (19) method_one -> TRANSL LPAR ID . RPAR

    RPAR            shift and go to state 105


state 78

    (20) method_one -> READ LPAR STRING . COMMA STRING RPAR

    COMMA           shift and go to state 106


state 79

    (21) method_one -> WRITE LPAR ID . RPAR

    RPAR            shift and go to state 107


state 80

    (22) method_one -> GCCON LPAR STRING . RPAR

    RPAR            shift and go to state 108


state 81

    (23) method_one -> RNAINF LPAR ID . RPAR

    RPAR            shift and go to state 109


state 82

    (24) method_one -> ORF LPAR STRING . RPAR

    RPAR            shift and go to state 110


state 83

    (25) method_one -> COMPF LPAR ID . RPAR

    RPAR            shift and go to state 111


state 84

    (26) method_one -> RCOMPF LPAR ID . RPAR

    RPAR            shift and go to state 112


state 85

    (27) method_one -> TRANSCF LPAR ID . RPAR

    RPAR            shift and go to state 113


state 86

    (28) method_one -> RTRANSCF LPAR ID . RPAR

    RPAR            shift and go to state 114


state 87

    (29) method_one -> MOTIF LPAR ID . COMMA STRING RPAR

    COMMA           shift and go to state 115


state 88

    (30) method_one -> PUNNETT LPAR STRING . COMMA STRING RPAR

    COMMA           shift and go to state 116


state 89

    (31) method_one -> WPUNNETT LPAR STRING . COMMA STRING COMMA STRING RPAR

    COMMA           shift and go to state 117


state 90

    (32) method_one -> PROTINFER LPAR STRING . RPAR

    RPAR            shift and go to state 118


state 91

    (33) method_two -> SEQ LPAR STRING . COMMA DTYPE RPAR
    (34) method_two -> SEQ LPAR STRING . COMMA RTYPE RPAR

    COMMA           shift and go to state 119


state 92

    (35) method_two -> HAMDIS LPAR ID . COMMA ID RPAR

    COMMA           shift and go to state 120


state 93

    (36) method_two -> RECUR LPAR INT . COMMA INT RPAR

    COMMA           shift and go to state 121


state 94

    (37) method_three -> DRAW LPAR INT . COMMA STRING RPAR

    COMMA           shift and go to state 122


state 95

    (9) method_one -> PRINT LPAR ID RPAR .

    $end            reduce using rule 9 (method_one -> PRINT LPAR ID RPAR .)


state 96

    (10) method_one -> COMP LPAR ID RPAR .

    $end            reduce using rule 10 (method_one -> COMP LPAR ID RPAR .)


state 97

    (11) method_one -> RCOMP LPAR ID RPAR .

    $end            reduce using rule 11 (method_one -> RCOMP LPAR ID RPAR .)


state 98

    (12) method_one -> TRANSC LPAR ID RPAR .

    $end            reduce using rule 12 (method_one -> TRANSC LPAR ID RPAR .)


state 99

    (13) method_one -> RTRANSC LPAR ID RPAR .

    $end            reduce using rule 13 (method_one -> RTRANSC LPAR ID RPAR .)


state 100

    (14) method_one -> CTABLE LPAR INT RPAR .

    $end            reduce using rule 14 (method_one -> CTABLE LPAR INT RPAR .)


state 101

    (15) method_one -> COUNT LPAR ID RPAR .

    $end            reduce using rule 15 (method_one -> COUNT LPAR ID RPAR .)


state 102

    (16) method_one -> CONSEN LPAR ID RPAR .

    $end            reduce using rule 16 (method_one -> CONSEN LPAR ID RPAR .)


state 103

    (17) method_one -> ACONSEN LPAR ID RPAR .

    $end            reduce using rule 17 (method_one -> ACONSEN LPAR ID RPAR .)


state 104

    (18) method_one -> DCONSEN LPAR ID RPAR .

    $end            reduce using rule 18 (method_one -> DCONSEN LPAR ID RPAR .)


state 105

    (19) method_one -> TRANSL LPAR ID RPAR .

    $end            reduce using rule 19 (method_one -> TRANSL LPAR ID RPAR .)


state 106

    (20) method_one -> READ LPAR STRING COMMA . STRING RPAR

    STRING          shift and go to state 123


state 107

    (21) method_one -> WRITE LPAR ID RPAR .

    $end            reduce using rule 21 (method_one -> WRITE LPAR ID RPAR .)


state 108

    (22) method_one -> GCCON LPAR STRING RPAR .

    $end            reduce using rule 22 (method_one -> GCCON LPAR STRING RPAR .)


state 109

    (23) method_one -> RNAINF LPAR ID RPAR .

    $end            reduce using rule 23 (method_one -> RNAINF LPAR ID RPAR .)


state 110

    (24) method_one -> ORF LPAR STRING RPAR .

    $end            reduce using rule 24 (method_one -> ORF LPAR STRING RPAR .)


state 111

    (25) method_one -> COMPF LPAR ID RPAR .

    $end            reduce using rule 25 (method_one -> COMPF LPAR ID RPAR .)


state 112

    (26) method_one -> RCOMPF LPAR ID RPAR .

    $end            reduce using rule 26 (method_one -> RCOMPF LPAR ID RPAR .)


state 113

    (27) method_one -> TRANSCF LPAR ID RPAR .

    $end            reduce using rule 27 (method_one -> TRANSCF LPAR ID RPAR .)


state 114

    (28) method_one -> RTRANSCF LPAR ID RPAR .

    $end            reduce using rule 28 (method_one -> RTRANSCF LPAR ID RPAR .)


state 115

    (29) method_one -> MOTIF LPAR ID COMMA . STRING RPAR

    STRING          shift and go to state 124


state 116

    (30) method_one -> PUNNETT LPAR STRING COMMA . STRING RPAR

    STRING          shift and go to state 125


state 117

    (31) method_one -> WPUNNETT LPAR STRING COMMA . STRING COMMA STRING RPAR

    STRING          shift and go to state 126


state 118

    (32) method_one -> PROTINFER LPAR STRING RPAR .

    $end            reduce using rule 32 (method_one -> PROTINFER LPAR STRING RPAR .)


state 119

    (33) method_two -> SEQ LPAR STRING COMMA . DTYPE RPAR
    (34) method_two -> SEQ LPAR STRING COMMA . RTYPE RPAR

    DTYPE           shift and go to state 127
    RTYPE           shift and go to state 128


state 120

    (35) method_two -> HAMDIS LPAR ID COMMA . ID RPAR

    ID              shift and go to state 129


state 121

    (36) method_two -> RECUR LPAR INT COMMA . INT RPAR

    INT             shift and go to state 130


state 122

    (37) method_three -> DRAW LPAR INT COMMA . STRING RPAR

    STRING          shift and go to state 131


state 123

    (20) method_one -> READ LPAR STRING COMMA STRING . RPAR

    RPAR            shift and go to state 132


state 124

    (29) method_one -> MOTIF LPAR ID COMMA STRING . RPAR

    RPAR            shift and go to state 133


state 125

    (30) method_one -> PUNNETT LPAR STRING COMMA STRING . RPAR

    RPAR            shift and go to state 134


state 126

    (31) method_one -> WPUNNETT LPAR STRING COMMA STRING . COMMA STRING RPAR

    COMMA           shift and go to state 135


state 127

    (33) method_two -> SEQ LPAR STRING COMMA DTYPE . RPAR

    RPAR            shift and go to state 136


state 128

    (34) method_two -> SEQ LPAR STRING COMMA RTYPE . RPAR

    RPAR            shift and go to state 137


state 129

    (35) method_two -> HAMDIS LPAR ID COMMA ID . RPAR

    RPAR            shift and go to state 138


state 130

    (36) method_two -> RECUR LPAR INT COMMA INT . RPAR

    RPAR            shift and go to state 139


state 131

    (37) method_three -> DRAW LPAR INT COMMA STRING . RPAR

    RPAR            shift and go to state 140


state 132

    (20) method_one -> READ LPAR STRING COMMA STRING RPAR .

    $end            reduce using rule 20 (method_one -> READ LPAR STRING COMMA STRING RPAR .)


state 133

    (29) method_one -> MOTIF LPAR ID COMMA STRING RPAR .

    $end            reduce using rule 29 (method_one -> MOTIF LPAR ID COMMA STRING RPAR .)


state 134

    (30) method_one -> PUNNETT LPAR STRING COMMA STRING RPAR .

    $end            reduce using rule 30 (method_one -> PUNNETT LPAR STRING COMMA STRING RPAR .)


state 135

    (31) method_one -> WPUNNETT LPAR STRING COMMA STRING COMMA . STRING RPAR

    STRING          shift and go to state 141


state 136

    (33) method_two -> SEQ LPAR STRING COMMA DTYPE RPAR .

    $end            reduce using rule 33 (method_two -> SEQ LPAR STRING COMMA DTYPE RPAR .)


state 137

    (34) method_two -> SEQ LPAR STRING COMMA RTYPE RPAR .

    $end            reduce using rule 34 (method_two -> SEQ LPAR STRING COMMA RTYPE RPAR .)


state 138

    (35) method_two -> HAMDIS LPAR ID COMMA ID RPAR .

    $end            reduce using rule 35 (method_two -> HAMDIS LPAR ID COMMA ID RPAR .)


state 139

    (36) method_two -> RECUR LPAR INT COMMA INT RPAR .

    $end            reduce using rule 36 (method_two -> RECUR LPAR INT COMMA INT RPAR .)


state 140

    (37) method_three -> DRAW LPAR INT COMMA STRING RPAR .

    $end            reduce using rule 37 (method_three -> DRAW LPAR INT COMMA STRING RPAR .)


state 141

    (31) method_one -> WPUNNETT LPAR STRING COMMA STRING COMMA STRING . RPAR

    RPAR            shift and go to state 142


state 142

    (31) method_one -> WPUNNETT LPAR STRING COMMA STRING COMMA STRING RPAR .

    $end            reduce using rule 31 (method_one -> WPUNNETT LPAR STRING COMMA STRING COMMA STRING RPAR .)

