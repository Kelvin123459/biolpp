Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> VARLIST
Rule 2     statement -> ID EQUALS ID
Rule 3     statement -> ID EQUALS result
Rule 4     statement -> ID
Rule 5     statement -> result
Rule 6     result -> method_one
Rule 7     result -> method_two
Rule 8     result -> method_three
Rule 9     method_one -> PRINT LPAR STRING RPAR
Rule 10    method_one -> COMP LPAR ID RPAR
Rule 11    method_one -> RCOMP LPAR ID RPAR
Rule 12    method_one -> TRANSC LPAR ID RPAR
Rule 13    method_one -> RTRANSC LPAR ID RPAR
Rule 14    method_one -> CTABLE LPAR INT RPAR
Rule 15    method_one -> COUNT LPAR ID RPAR
Rule 16    method_one -> CONSEN LPAR ID RPAR
Rule 17    method_one -> ACONSEN LPAR ID RPAR
Rule 18    method_one -> DCONSEN LPAR ID RPAR
Rule 19    method_one -> TRANSL LPAR ID COMMA DTYPE RPAR
Rule 20    method_one -> TRANSL LPAR ID COMMA RTYPE RPAR
Rule 21    method_one -> READ LPAR STRING COMMA STRING RPAR
Rule 22    method_one -> WRITE LPAR ID RPAR
Rule 23    method_one -> GCCON LPAR STRING RPAR
Rule 24    method_one -> RNAINF LPAR ID RPAR
Rule 25    method_one -> RNAINF2 LPAR STRING RPAR
Rule 26    method_one -> ORF LPAR STRING RPAR
Rule 27    method_one -> COMPF LPAR STRING RPAR
Rule 28    method_one -> RCOMPF LPAR STRING RPAR
Rule 29    method_one -> TRANSCF LPAR STRING RPAR
Rule 30    method_one -> RTRANSCF LPAR STRING RPAR
Rule 31    method_one -> PROTW LPAR ID RPAR
Rule 32    method_two -> SEQ LPAR STRING RPAR
Rule 33    method_two -> HAMDIS LPAR ID COMMA ID RPAR
Rule 34    method_two -> RECUR LPAR INT COMMA INT RPAR
Rule 35    method_three -> DRAW LPAR INT COMMA STRING RPAR
Rule 36    empty -> <empty>

Terminals, with rules where they appear

ACONSEN              : 17
COMMA                : 19 20 21 33 34 35
COMP                 : 10
COMPF                : 27
CONSEN               : 16
COUNT                : 15
CTABLE               : 14
DCONSEN              : 18
DRAW                 : 35
DTYPE                : 19
EQUALS               : 2 3
GCCON                : 23
HAMDIS               : 33
ID                   : 2 2 3 4 10 11 12 13 15 16 17 18 19 20 22 24 31 33 33
INT                  : 14 34 34 35
LPAR                 : 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
ORF                  : 26
PRINT                : 9
PROTW                : 31
RCOMP                : 11
RCOMPF               : 28
READ                 : 21
RECUR                : 34
RNAINF               : 24
RNAINF2              : 25
RPAR                 : 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
RTRANSC              : 13
RTRANSCF             : 30
RTYPE                : 20
SEQ                  : 32
STRING               : 9 21 21 23 25 26 27 28 29 30 32 35
TRANSC               : 12
TRANSCF              : 29
TRANSL               : 19 20
VARLIST              : 1
WRITE                : 22
error                : 

Nonterminals, with rules where they appear

empty                : 
method_one           : 6
method_three         : 8
method_two           : 7
result               : 3 5
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . VARLIST
    (2) statement -> . ID EQUALS ID
    (3) statement -> . ID EQUALS result
    (4) statement -> . ID
    (5) statement -> . result
    (6) result -> . method_one
    (7) result -> . method_two
    (8) result -> . method_three
    (9) method_one -> . PRINT LPAR STRING RPAR
    (10) method_one -> . COMP LPAR ID RPAR
    (11) method_one -> . RCOMP LPAR ID RPAR
    (12) method_one -> . TRANSC LPAR ID RPAR
    (13) method_one -> . RTRANSC LPAR ID RPAR
    (14) method_one -> . CTABLE LPAR INT RPAR
    (15) method_one -> . COUNT LPAR ID RPAR
    (16) method_one -> . CONSEN LPAR ID RPAR
    (17) method_one -> . ACONSEN LPAR ID RPAR
    (18) method_one -> . DCONSEN LPAR ID RPAR
    (19) method_one -> . TRANSL LPAR ID COMMA DTYPE RPAR
    (20) method_one -> . TRANSL LPAR ID COMMA RTYPE RPAR
    (21) method_one -> . READ LPAR STRING COMMA STRING RPAR
    (22) method_one -> . WRITE LPAR ID RPAR
    (23) method_one -> . GCCON LPAR STRING RPAR
    (24) method_one -> . RNAINF LPAR ID RPAR
    (25) method_one -> . RNAINF2 LPAR STRING RPAR
    (26) method_one -> . ORF LPAR STRING RPAR
    (27) method_one -> . COMPF LPAR STRING RPAR
    (28) method_one -> . RCOMPF LPAR STRING RPAR
    (29) method_one -> . TRANSCF LPAR STRING RPAR
    (30) method_one -> . RTRANSCF LPAR STRING RPAR
    (31) method_one -> . PROTW LPAR ID RPAR
    (32) method_two -> . SEQ LPAR STRING RPAR
    (33) method_two -> . HAMDIS LPAR ID COMMA ID RPAR
    (34) method_two -> . RECUR LPAR INT COMMA INT RPAR
    (35) method_three -> . DRAW LPAR INT COMMA STRING RPAR

    VARLIST         shift and go to state 2
    ID              shift and go to state 3
    PRINT           shift and go to state 8
    COMP            shift and go to state 9
    RCOMP           shift and go to state 10
    TRANSC          shift and go to state 11
    RTRANSC         shift and go to state 12
    CTABLE          shift and go to state 13
    COUNT           shift and go to state 14
    CONSEN          shift and go to state 15
    ACONSEN         shift and go to state 16
    DCONSEN         shift and go to state 17
    TRANSL          shift and go to state 18
    READ            shift and go to state 19
    WRITE           shift and go to state 20
    GCCON           shift and go to state 21
    RNAINF          shift and go to state 22
    RNAINF2         shift and go to state 23
    ORF             shift and go to state 24
    COMPF           shift and go to state 25
    RCOMPF          shift and go to state 26
    TRANSCF         shift and go to state 27
    RTRANSCF        shift and go to state 28
    PROTW           shift and go to state 29
    SEQ             shift and go to state 30
    HAMDIS          shift and go to state 31
    RECUR           shift and go to state 32
    DRAW            shift and go to state 33

    statement                      shift and go to state 1
    result                         shift and go to state 4
    method_one                     shift and go to state 5
    method_two                     shift and go to state 6
    method_three                   shift and go to state 7

state 1

    (0) S' -> statement .



state 2

    (1) statement -> VARLIST .

    $end            reduce using rule 1 (statement -> VARLIST .)


state 3

    (2) statement -> ID . EQUALS ID
    (3) statement -> ID . EQUALS result
    (4) statement -> ID .

    EQUALS          shift and go to state 34
    $end            reduce using rule 4 (statement -> ID .)


state 4

    (5) statement -> result .

    $end            reduce using rule 5 (statement -> result .)


state 5

    (6) result -> method_one .

    $end            reduce using rule 6 (result -> method_one .)


state 6

    (7) result -> method_two .

    $end            reduce using rule 7 (result -> method_two .)


state 7

    (8) result -> method_three .

    $end            reduce using rule 8 (result -> method_three .)


state 8

    (9) method_one -> PRINT . LPAR STRING RPAR

    LPAR            shift and go to state 35


state 9

    (10) method_one -> COMP . LPAR ID RPAR

    LPAR            shift and go to state 36


state 10

    (11) method_one -> RCOMP . LPAR ID RPAR

    LPAR            shift and go to state 37


state 11

    (12) method_one -> TRANSC . LPAR ID RPAR

    LPAR            shift and go to state 38


state 12

    (13) method_one -> RTRANSC . LPAR ID RPAR

    LPAR            shift and go to state 39


state 13

    (14) method_one -> CTABLE . LPAR INT RPAR

    LPAR            shift and go to state 40


state 14

    (15) method_one -> COUNT . LPAR ID RPAR

    LPAR            shift and go to state 41


state 15

    (16) method_one -> CONSEN . LPAR ID RPAR

    LPAR            shift and go to state 42


state 16

    (17) method_one -> ACONSEN . LPAR ID RPAR

    LPAR            shift and go to state 43


state 17

    (18) method_one -> DCONSEN . LPAR ID RPAR

    LPAR            shift and go to state 44


state 18

    (19) method_one -> TRANSL . LPAR ID COMMA DTYPE RPAR
    (20) method_one -> TRANSL . LPAR ID COMMA RTYPE RPAR

    LPAR            shift and go to state 45


state 19

    (21) method_one -> READ . LPAR STRING COMMA STRING RPAR

    LPAR            shift and go to state 46


state 20

    (22) method_one -> WRITE . LPAR ID RPAR

    LPAR            shift and go to state 47


state 21

    (23) method_one -> GCCON . LPAR STRING RPAR

    LPAR            shift and go to state 48


state 22

    (24) method_one -> RNAINF . LPAR ID RPAR

    LPAR            shift and go to state 49


state 23

    (25) method_one -> RNAINF2 . LPAR STRING RPAR

    LPAR            shift and go to state 50


state 24

    (26) method_one -> ORF . LPAR STRING RPAR

    LPAR            shift and go to state 51


state 25

    (27) method_one -> COMPF . LPAR STRING RPAR

    LPAR            shift and go to state 52


state 26

    (28) method_one -> RCOMPF . LPAR STRING RPAR

    LPAR            shift and go to state 53


state 27

    (29) method_one -> TRANSCF . LPAR STRING RPAR

    LPAR            shift and go to state 54


state 28

    (30) method_one -> RTRANSCF . LPAR STRING RPAR

    LPAR            shift and go to state 55


state 29

    (31) method_one -> PROTW . LPAR ID RPAR

    LPAR            shift and go to state 56


state 30

    (32) method_two -> SEQ . LPAR STRING RPAR

    LPAR            shift and go to state 57


state 31

    (33) method_two -> HAMDIS . LPAR ID COMMA ID RPAR

    LPAR            shift and go to state 58


state 32

    (34) method_two -> RECUR . LPAR INT COMMA INT RPAR

    LPAR            shift and go to state 59


state 33

    (35) method_three -> DRAW . LPAR INT COMMA STRING RPAR

    LPAR            shift and go to state 60


state 34

    (2) statement -> ID EQUALS . ID
    (3) statement -> ID EQUALS . result
    (6) result -> . method_one
    (7) result -> . method_two
    (8) result -> . method_three
    (9) method_one -> . PRINT LPAR STRING RPAR
    (10) method_one -> . COMP LPAR ID RPAR
    (11) method_one -> . RCOMP LPAR ID RPAR
    (12) method_one -> . TRANSC LPAR ID RPAR
    (13) method_one -> . RTRANSC LPAR ID RPAR
    (14) method_one -> . CTABLE LPAR INT RPAR
    (15) method_one -> . COUNT LPAR ID RPAR
    (16) method_one -> . CONSEN LPAR ID RPAR
    (17) method_one -> . ACONSEN LPAR ID RPAR
    (18) method_one -> . DCONSEN LPAR ID RPAR
    (19) method_one -> . TRANSL LPAR ID COMMA DTYPE RPAR
    (20) method_one -> . TRANSL LPAR ID COMMA RTYPE RPAR
    (21) method_one -> . READ LPAR STRING COMMA STRING RPAR
    (22) method_one -> . WRITE LPAR ID RPAR
    (23) method_one -> . GCCON LPAR STRING RPAR
    (24) method_one -> . RNAINF LPAR ID RPAR
    (25) method_one -> . RNAINF2 LPAR STRING RPAR
    (26) method_one -> . ORF LPAR STRING RPAR
    (27) method_one -> . COMPF LPAR STRING RPAR
    (28) method_one -> . RCOMPF LPAR STRING RPAR
    (29) method_one -> . TRANSCF LPAR STRING RPAR
    (30) method_one -> . RTRANSCF LPAR STRING RPAR
    (31) method_one -> . PROTW LPAR ID RPAR
    (32) method_two -> . SEQ LPAR STRING RPAR
    (33) method_two -> . HAMDIS LPAR ID COMMA ID RPAR
    (34) method_two -> . RECUR LPAR INT COMMA INT RPAR
    (35) method_three -> . DRAW LPAR INT COMMA STRING RPAR

    ID              shift and go to state 61
    PRINT           shift and go to state 8
    COMP            shift and go to state 9
    RCOMP           shift and go to state 10
    TRANSC          shift and go to state 11
    RTRANSC         shift and go to state 12
    CTABLE          shift and go to state 13
    COUNT           shift and go to state 14
    CONSEN          shift and go to state 15
    ACONSEN         shift and go to state 16
    DCONSEN         shift and go to state 17
    TRANSL          shift and go to state 18
    READ            shift and go to state 19
    WRITE           shift and go to state 20
    GCCON           shift and go to state 21
    RNAINF          shift and go to state 22
    RNAINF2         shift and go to state 23
    ORF             shift and go to state 24
    COMPF           shift and go to state 25
    RCOMPF          shift and go to state 26
    TRANSCF         shift and go to state 27
    RTRANSCF        shift and go to state 28
    PROTW           shift and go to state 29
    SEQ             shift and go to state 30
    HAMDIS          shift and go to state 31
    RECUR           shift and go to state 32
    DRAW            shift and go to state 33

    result                         shift and go to state 62
    method_one                     shift and go to state 5
    method_two                     shift and go to state 6
    method_three                   shift and go to state 7

state 35

    (9) method_one -> PRINT LPAR . STRING RPAR

    STRING          shift and go to state 63


state 36

    (10) method_one -> COMP LPAR . ID RPAR

    ID              shift and go to state 64


state 37

    (11) method_one -> RCOMP LPAR . ID RPAR

    ID              shift and go to state 65


state 38

    (12) method_one -> TRANSC LPAR . ID RPAR

    ID              shift and go to state 66


state 39

    (13) method_one -> RTRANSC LPAR . ID RPAR

    ID              shift and go to state 67


state 40

    (14) method_one -> CTABLE LPAR . INT RPAR

    INT             shift and go to state 68


state 41

    (15) method_one -> COUNT LPAR . ID RPAR

    ID              shift and go to state 69


state 42

    (16) method_one -> CONSEN LPAR . ID RPAR

    ID              shift and go to state 70


state 43

    (17) method_one -> ACONSEN LPAR . ID RPAR

    ID              shift and go to state 71


state 44

    (18) method_one -> DCONSEN LPAR . ID RPAR

    ID              shift and go to state 72


state 45

    (19) method_one -> TRANSL LPAR . ID COMMA DTYPE RPAR
    (20) method_one -> TRANSL LPAR . ID COMMA RTYPE RPAR

    ID              shift and go to state 73


state 46

    (21) method_one -> READ LPAR . STRING COMMA STRING RPAR

    STRING          shift and go to state 74


state 47

    (22) method_one -> WRITE LPAR . ID RPAR

    ID              shift and go to state 75


state 48

    (23) method_one -> GCCON LPAR . STRING RPAR

    STRING          shift and go to state 76


state 49

    (24) method_one -> RNAINF LPAR . ID RPAR

    ID              shift and go to state 77


state 50

    (25) method_one -> RNAINF2 LPAR . STRING RPAR

    STRING          shift and go to state 78


state 51

    (26) method_one -> ORF LPAR . STRING RPAR

    STRING          shift and go to state 79


state 52

    (27) method_one -> COMPF LPAR . STRING RPAR

    STRING          shift and go to state 80


state 53

    (28) method_one -> RCOMPF LPAR . STRING RPAR

    STRING          shift and go to state 81


state 54

    (29) method_one -> TRANSCF LPAR . STRING RPAR

    STRING          shift and go to state 82


state 55

    (30) method_one -> RTRANSCF LPAR . STRING RPAR

    STRING          shift and go to state 83


state 56

    (31) method_one -> PROTW LPAR . ID RPAR

    ID              shift and go to state 84


state 57

    (32) method_two -> SEQ LPAR . STRING RPAR

    STRING          shift and go to state 85


state 58

    (33) method_two -> HAMDIS LPAR . ID COMMA ID RPAR

    ID              shift and go to state 86


state 59

    (34) method_two -> RECUR LPAR . INT COMMA INT RPAR

    INT             shift and go to state 87


state 60

    (35) method_three -> DRAW LPAR . INT COMMA STRING RPAR

    INT             shift and go to state 88


state 61

    (2) statement -> ID EQUALS ID .

    $end            reduce using rule 2 (statement -> ID EQUALS ID .)


state 62

    (3) statement -> ID EQUALS result .

    $end            reduce using rule 3 (statement -> ID EQUALS result .)


state 63

    (9) method_one -> PRINT LPAR STRING . RPAR

    RPAR            shift and go to state 89


state 64

    (10) method_one -> COMP LPAR ID . RPAR

    RPAR            shift and go to state 90


state 65

    (11) method_one -> RCOMP LPAR ID . RPAR

    RPAR            shift and go to state 91


state 66

    (12) method_one -> TRANSC LPAR ID . RPAR

    RPAR            shift and go to state 92


state 67

    (13) method_one -> RTRANSC LPAR ID . RPAR

    RPAR            shift and go to state 93


state 68

    (14) method_one -> CTABLE LPAR INT . RPAR

    RPAR            shift and go to state 94


state 69

    (15) method_one -> COUNT LPAR ID . RPAR

    RPAR            shift and go to state 95


state 70

    (16) method_one -> CONSEN LPAR ID . RPAR

    RPAR            shift and go to state 96


state 71

    (17) method_one -> ACONSEN LPAR ID . RPAR

    RPAR            shift and go to state 97


state 72

    (18) method_one -> DCONSEN LPAR ID . RPAR

    RPAR            shift and go to state 98


state 73

    (19) method_one -> TRANSL LPAR ID . COMMA DTYPE RPAR
    (20) method_one -> TRANSL LPAR ID . COMMA RTYPE RPAR

    COMMA           shift and go to state 99


state 74

    (21) method_one -> READ LPAR STRING . COMMA STRING RPAR

    COMMA           shift and go to state 100


state 75

    (22) method_one -> WRITE LPAR ID . RPAR

    RPAR            shift and go to state 101


state 76

    (23) method_one -> GCCON LPAR STRING . RPAR

    RPAR            shift and go to state 102


state 77

    (24) method_one -> RNAINF LPAR ID . RPAR

    RPAR            shift and go to state 103


state 78

    (25) method_one -> RNAINF2 LPAR STRING . RPAR

    RPAR            shift and go to state 104


state 79

    (26) method_one -> ORF LPAR STRING . RPAR

    RPAR            shift and go to state 105


state 80

    (27) method_one -> COMPF LPAR STRING . RPAR

    RPAR            shift and go to state 106


state 81

    (28) method_one -> RCOMPF LPAR STRING . RPAR

    RPAR            shift and go to state 107


state 82

    (29) method_one -> TRANSCF LPAR STRING . RPAR

    RPAR            shift and go to state 108


state 83

    (30) method_one -> RTRANSCF LPAR STRING . RPAR

    RPAR            shift and go to state 109


state 84

    (31) method_one -> PROTW LPAR ID . RPAR

    RPAR            shift and go to state 110


state 85

    (32) method_two -> SEQ LPAR STRING . RPAR

    RPAR            shift and go to state 111


state 86

    (33) method_two -> HAMDIS LPAR ID . COMMA ID RPAR

    COMMA           shift and go to state 112


state 87

    (34) method_two -> RECUR LPAR INT . COMMA INT RPAR

    COMMA           shift and go to state 113


state 88

    (35) method_three -> DRAW LPAR INT . COMMA STRING RPAR

    COMMA           shift and go to state 114


state 89

    (9) method_one -> PRINT LPAR STRING RPAR .

    $end            reduce using rule 9 (method_one -> PRINT LPAR STRING RPAR .)


state 90

    (10) method_one -> COMP LPAR ID RPAR .

    $end            reduce using rule 10 (method_one -> COMP LPAR ID RPAR .)


state 91

    (11) method_one -> RCOMP LPAR ID RPAR .

    $end            reduce using rule 11 (method_one -> RCOMP LPAR ID RPAR .)


state 92

    (12) method_one -> TRANSC LPAR ID RPAR .

    $end            reduce using rule 12 (method_one -> TRANSC LPAR ID RPAR .)


state 93

    (13) method_one -> RTRANSC LPAR ID RPAR .

    $end            reduce using rule 13 (method_one -> RTRANSC LPAR ID RPAR .)


state 94

    (14) method_one -> CTABLE LPAR INT RPAR .

    $end            reduce using rule 14 (method_one -> CTABLE LPAR INT RPAR .)


state 95

    (15) method_one -> COUNT LPAR ID RPAR .

    $end            reduce using rule 15 (method_one -> COUNT LPAR ID RPAR .)


state 96

    (16) method_one -> CONSEN LPAR ID RPAR .

    $end            reduce using rule 16 (method_one -> CONSEN LPAR ID RPAR .)


state 97

    (17) method_one -> ACONSEN LPAR ID RPAR .

    $end            reduce using rule 17 (method_one -> ACONSEN LPAR ID RPAR .)


state 98

    (18) method_one -> DCONSEN LPAR ID RPAR .

    $end            reduce using rule 18 (method_one -> DCONSEN LPAR ID RPAR .)


state 99

    (19) method_one -> TRANSL LPAR ID COMMA . DTYPE RPAR
    (20) method_one -> TRANSL LPAR ID COMMA . RTYPE RPAR

    DTYPE           shift and go to state 115
    RTYPE           shift and go to state 116


state 100

    (21) method_one -> READ LPAR STRING COMMA . STRING RPAR

    STRING          shift and go to state 117


state 101

    (22) method_one -> WRITE LPAR ID RPAR .

    $end            reduce using rule 22 (method_one -> WRITE LPAR ID RPAR .)


state 102

    (23) method_one -> GCCON LPAR STRING RPAR .

    $end            reduce using rule 23 (method_one -> GCCON LPAR STRING RPAR .)


state 103

    (24) method_one -> RNAINF LPAR ID RPAR .

    $end            reduce using rule 24 (method_one -> RNAINF LPAR ID RPAR .)


state 104

    (25) method_one -> RNAINF2 LPAR STRING RPAR .

    $end            reduce using rule 25 (method_one -> RNAINF2 LPAR STRING RPAR .)


state 105

    (26) method_one -> ORF LPAR STRING RPAR .

    $end            reduce using rule 26 (method_one -> ORF LPAR STRING RPAR .)


state 106

    (27) method_one -> COMPF LPAR STRING RPAR .

    $end            reduce using rule 27 (method_one -> COMPF LPAR STRING RPAR .)


state 107

    (28) method_one -> RCOMPF LPAR STRING RPAR .

    $end            reduce using rule 28 (method_one -> RCOMPF LPAR STRING RPAR .)


state 108

    (29) method_one -> TRANSCF LPAR STRING RPAR .

    $end            reduce using rule 29 (method_one -> TRANSCF LPAR STRING RPAR .)


state 109

    (30) method_one -> RTRANSCF LPAR STRING RPAR .

    $end            reduce using rule 30 (method_one -> RTRANSCF LPAR STRING RPAR .)


state 110

    (31) method_one -> PROTW LPAR ID RPAR .

    $end            reduce using rule 31 (method_one -> PROTW LPAR ID RPAR .)


state 111

    (32) method_two -> SEQ LPAR STRING RPAR .

    $end            reduce using rule 32 (method_two -> SEQ LPAR STRING RPAR .)


state 112

    (33) method_two -> HAMDIS LPAR ID COMMA . ID RPAR

    ID              shift and go to state 118


state 113

    (34) method_two -> RECUR LPAR INT COMMA . INT RPAR

    INT             shift and go to state 119


state 114

    (35) method_three -> DRAW LPAR INT COMMA . STRING RPAR

    STRING          shift and go to state 120


state 115

    (19) method_one -> TRANSL LPAR ID COMMA DTYPE . RPAR

    RPAR            shift and go to state 121


state 116

    (20) method_one -> TRANSL LPAR ID COMMA RTYPE . RPAR

    RPAR            shift and go to state 122


state 117

    (21) method_one -> READ LPAR STRING COMMA STRING . RPAR

    RPAR            shift and go to state 123


state 118

    (33) method_two -> HAMDIS LPAR ID COMMA ID . RPAR

    RPAR            shift and go to state 124


state 119

    (34) method_two -> RECUR LPAR INT COMMA INT . RPAR

    RPAR            shift and go to state 125


state 120

    (35) method_three -> DRAW LPAR INT COMMA STRING . RPAR

    RPAR            shift and go to state 126


state 121

    (19) method_one -> TRANSL LPAR ID COMMA DTYPE RPAR .

    $end            reduce using rule 19 (method_one -> TRANSL LPAR ID COMMA DTYPE RPAR .)


state 122

    (20) method_one -> TRANSL LPAR ID COMMA RTYPE RPAR .

    $end            reduce using rule 20 (method_one -> TRANSL LPAR ID COMMA RTYPE RPAR .)


state 123

    (21) method_one -> READ LPAR STRING COMMA STRING RPAR .

    $end            reduce using rule 21 (method_one -> READ LPAR STRING COMMA STRING RPAR .)


state 124

    (33) method_two -> HAMDIS LPAR ID COMMA ID RPAR .

    $end            reduce using rule 33 (method_two -> HAMDIS LPAR ID COMMA ID RPAR .)


state 125

    (34) method_two -> RECUR LPAR INT COMMA INT RPAR .

    $end            reduce using rule 34 (method_two -> RECUR LPAR INT COMMA INT RPAR .)


state 126

    (35) method_three -> DRAW LPAR INT COMMA STRING RPAR .

    $end            reduce using rule 35 (method_three -> DRAW LPAR INT COMMA STRING RPAR .)

